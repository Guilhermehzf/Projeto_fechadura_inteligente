name: Deploy Go API to Server with Password

on:
  push:
    branches:
      - US-MQTT
    paths:
      - 'api/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Check out code
        uses: actions/checkout@v4

      - name: Build Go binary
        run: |
          cd api
          GOOS=linux GOARCH=amd64 go build -o minha-api

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Copy binary to server via SCP
        run: |
          sshpass -p '${{ secrets.SERVER_PASSWORD }}' scp -o StrictHostKeyChecking=no ./api/minha-api ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:~/minha-api-nova

      - name: SSH into server and restart service
        env:
          TARGET_PATH: ${{ secrets.SERVER_APP_PATH }}
          SUDO_PASS: ${{ secrets.SERVER_PASSWORD }}
        run: |
          sshpass -p '${{ secrets.SERVER_PASSWORD }}' ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            set -e
            
            echo "Parando o serviço antigo da API..."
            echo $SUDO_PASS | sudo -S systemctl stop api.service
            
            echo "Movendo o novo executável para o destino final: $TARGET_PATH"
            echo $SUDO_PASS | sudo -S mv ~/minha-api-nova "$TARGET_PATH"
            echo $SUDO_PASS | sudo -S chmod +x "$TARGET_PATH"

            echo "Iniciando o novo serviço da API..."
            echo $SUDO_PASS | sudo -S systemctl start api.service

            echo "Deploy concluído! Verificando o status..."
            echo $SUDO_PASS | sudo -S systemctl status api.service
          EOF